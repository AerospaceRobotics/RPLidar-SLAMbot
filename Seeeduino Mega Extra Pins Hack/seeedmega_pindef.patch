Index: arduino/hardware/arduino/variants/
===================================================================
--- arduino/hardware/arduino/variants/mega/pins_arduino.h  (1.0.5)
+++ arduino/hardware/arduino/variants/seeed/pins_arduino.h  (edited copy)
@@ -27,7 +27,7 @@
 
 #include <avr/pgmspace.h>
 
-#define NUM_DIGITAL_PINS            70
+#define NUM_DIGITAL_PINS            86
 #define NUM_ANALOG_INPUTS           16
 #define analogInputToDigitalPin(p)  ((p < 16) ? (p) + 54 : -1)
 #define digitalPinHasPWM(p)         (((p) >= 2 && (p) <= 13) || ((p) >= 44 && (p)<= 46))
@@ -58,6 +58,23 @@
 static const uint8_t A14 = 68;
 static const uint8_t A15 = 69;
 
+#define DPH2 70
+#define DPH7 71
+#define DPJ2 72
+#define DPJ3 73
+#define DPJ4 74
+#define DPJ5 75
+#define DPJ6 76
+#define DPJ7 77
+#define DPD4 78
+#define DPD5 79
+#define DPD6 80
+#define DPG4 81
+#define DPG3 82
+#define DPE7 83
+#define DPE6 84
+#define DPE2 85
+
 // A majority of the pins are NOT PCINTs, SO BE WARNED (i.e. you cannot use them as receive pins)
 // Only pins available for RECEIVE (TRANSMIT can be on any pin):
 // (I've deliberately left out pin mapping to the Hardware USARTs - seems senseless to me)
@@ -206,6 +223,22 @@
 	PK	, // PK 5 ** 67 ** A13	
 	PK	, // PK 6 ** 68 ** A14	
 	PK	, // PK 7 ** 69 ** A15	
+	PH	, // PH 2 ** 70 ** D70	
+	PH	, // PH 7 ** 71 ** D71	
+	PJ	, // PJ 2 ** 72 ** D72	
+	PJ	, // PJ 3 ** 73 ** D73	
+	PJ	, // PJ 4 ** 74 ** D74	
+	PJ	, // PJ 5 ** 75 ** D75	
+	PJ	, // PJ 6 ** 76 ** D76	
+	PJ	, // PJ 7 ** 77 ** D77	
+	PD	, // PD 4 ** 78 ** D78	
+	PD	, // PD 5 ** 79 ** D79	
+	PD	, // PD 6 ** 80 ** D80	
+	PG	, // PG 4 ** 81 ** D81	
+	PG	, // PG 3 ** 82 ** D82	
+	PE	, // PE 7 ** 83 ** D83	
+	PE	, // PE 6 ** 84 ** D84	
+	PE	, // PE 2 ** 85 ** D85	
 };
 
 const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[] = {
@@ -281,6 +314,22 @@
 	_BV( 5 )	, // PK 5 ** 67 ** A13	
 	_BV( 6 )	, // PK 6 ** 68 ** A14	
 	_BV( 7 )	, // PK 7 ** 69 ** A15	
+	_BV( 2 )	, // PH 2 ** 70 ** D70	
+	_BV( 7 )	, // PH 7 ** 71 ** D71	
+	_BV( 2 )	, // PJ 2 ** 72 ** D72	
+	_BV( 3 )	, // PJ 3 ** 73 ** D73	
+	_BV( 4 )	, // PJ 4 ** 74 ** D74	
+	_BV( 5 )	, // PJ 5 ** 75 ** D75	
+	_BV( 6 )	, // PJ 6 ** 76 ** D76	
+	_BV( 7 )	, // PJ 7 ** 77 ** D77	
+	_BV( 4 )	, // PD 4 ** 78 ** D78	
+	_BV( 5 )	, // PD 5 ** 79 ** D79	
+	_BV( 6 )	, // PD 6 ** 80 ** D80	
+	_BV( 4 )	, // PG 4 ** 81 ** D81	
+	_BV( 3 )	, // PG 3 ** 82 ** D82	
+	_BV( 7 )	, // PE 7 ** 83 ** D83	
+	_BV( 6 )	, // PE 6 ** 84 ** D84	
+	_BV( 2 )	, // PE 2 ** 85 ** D85	
 };
 
 const uint8_t PROGMEM digital_pin_to_timer_PGM[] = {
@@ -356,6 +405,22 @@
 	NOT_ON_TIMER	, // PK 5 ** 67 ** A13	
 	NOT_ON_TIMER	, // PK 6 ** 68 ** A14	
 	NOT_ON_TIMER	, // PK 7 ** 69 ** A15	
+	NOT_ON_TIMER	, // PH 2 ** 70 ** D70	
+	NOT_ON_TIMER	, // PH 7 ** 71 ** D71	
+	NOT_ON_TIMER	, // PJ 2 ** 72 ** D72	
+	NOT_ON_TIMER	, // PJ 3 ** 73 ** D73	
+	NOT_ON_TIMER	, // PJ 4 ** 74 ** D74	
+	NOT_ON_TIMER	, // PJ 5 ** 75 ** D75	
+	NOT_ON_TIMER	, // PJ 6 ** 76 ** D76	
+	NOT_ON_TIMER	, // PJ 7 ** 77 ** D77	
+	NOT_ON_TIMER	, // PD 4 ** 78 ** D78	
+	NOT_ON_TIMER	, // PD 5 ** 79 ** D79	
+	NOT_ON_TIMER	, // PD 6 ** 80 ** D80	
+	NOT_ON_TIMER	, // PG 4 ** 81 ** D81	
+	NOT_ON_TIMER	, // PG 3 ** 82 ** D82	
+	NOT_ON_TIMER	, // PE 7 ** 83 ** D83	
+	NOT_ON_TIMER	, // PE 6 ** 84 ** D84	
+	NOT_ON_TIMER	, // PE 2 ** 85 ** D85	
 };
 
 #endif
